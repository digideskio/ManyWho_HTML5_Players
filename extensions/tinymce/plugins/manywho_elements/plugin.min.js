tinymce.PluginManager.add('manywho_elements', function (editor, url) {
    // Add a button that opens a window
    editor.addButton('manywho_elements', {
        text: 'Insert Reference',
        icon: false,
        onclick: function () {
            // Before we open the dialog, we need to get the value references from the system
            var requestUrl = ManyWhoConstants.BASE_PATH_URL + '/api/draw/1/element/value/reference?filter=';
            var requestType = 'GET';
            var requestData = '';
            var headers = ManyWhoAjax.createHeader(null, 'ManyWhoTenant', ManyWhoSharedServices.getTenantId());

            // Dispatch the request
            ManyWhoAjax.callRestApi('TinyMCE.LoadManyWhoElements',
                                    requestUrl,
                                    requestType,
                                    requestData,
                                    null,
                                    function (data, xhr, status) {
                                        var items = new Array();

                                        // Check to make sure we have some data to populate the drop-down
                                        if (data != null &&
                                            data.length > 0) {
                                            items[0] = { text: '-- Please select reference value --', value: '' };

                                            for (var a = 0; a < data.length; a++) {
                                                var textValue = '';
                                                var valueValue = '';
                                                var typeElementPropertyDeveloperName = data[a].typeElementPropertyDeveloperName;

                                                // Assign the base developer name
                                                textValue = data[a].developerName;
                                                valueValue = '{![' + data[a].developerName + ']';

                                                // Check to see if we have a property - if we do, add it
                                                if (typeElementPropertyDeveloperName != null &&
                                                    typeElementPropertyDeveloperName.trim().length > 0) {
                                                    textValue += ' • ' + typeElementPropertyDeveloperName;
                                                    valueValue += '.[' + typeElementPropertyDeveloperName + ']}';
                                                } else {
                                                    valueValue += '}';
                                                }

                                                // Add this item to our list for the dialog
                                                items[items.length] = { text: textValue, value: valueValue };
                                            }
                                        } else {
                                            items[0] = { text: 'None Found', value: '' };
                                        }

                                        // Open window
                                        editor.windowManager.open({
                                            title: 'Add Reference To Value',
                                            body: [
                                                {
                                                    type: 'listbox',
                                                    name: 'reference',
                                                    label: 'Reference',
                                                    values: items
                                                }
                                            ],
                                            onsubmit: function (e) {
                                                // Insert content when the window form is submitted
                                                editor.insertContent(e.data.reference);
                                            }
                                        });
                                    },
                                    null,
                                    headers,
                                    null,
                                    ManyWhoSharedServices.getAuthorAuthenticationToken());
        }
    });
});